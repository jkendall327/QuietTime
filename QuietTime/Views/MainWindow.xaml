<Window x:Class="QuietTime.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:viewmodels="clr-namespace:QuietTime.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowVM}"
        mc:Ignorable="d"
        Title="QuietTime" Name="MyWindow" MinWidth="800" MinHeight="500" PreviewMouseWheel="MyWindow_PreviewMouseWheel">
   

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="L" Command="{Binding LockVolume}" />
        
        <KeyBinding Key="Up" Command="{Binding IncreaseVolume}"/>
        <KeyBinding Key="Right" Command="{Binding IncreaseVolume}"/>
        <KeyBinding Key="Down" Command="{Binding DecreaseVolume}"/>
        <KeyBinding Key="Left" Command="{Binding DecreaseVolume}"/>
    </Window.InputBindings>

    <Window.Resources>
        <BitmapImage x:Key="TrayIcon" UriSource="../icon.ico" />
        
        <LinearGradientBrush x:Key="Unlocked" StartPoint="0.771,0.907" EndPoint="0.229,0.093">
            <GradientStop
                Color="#FFFDDDFF"
                Offset="1" />
            <GradientStop
                Color="#bfe3f2" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Locked"
            StartPoint="0.771,0.907"
            EndPoint="0.229,0.093">
            <GradientStop
                Color="#FFFDDDFF"
                Offset="1" />
            <GradientStop
                Color="#f2a2ab" />
        </LinearGradientBrush>
    </Window.Resources>

    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers >
                <DataTrigger Binding="{Binding IsLocked}" Value="true">
                    <Setter Property="Background" Value="{StaticResource Locked}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsLocked}" Value="false">
                    <Setter Property="Background" Value="{StaticResource Unlocked}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>

    <Window.SizeToContent>WidthAndHeight</Window.SizeToContent>

    <Grid x:Name="MainGrid" SizeChanged="MainGrid_SizeChanged">
        <!-- resize window automatically-->
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="ApplicationScaleTransform"
                        CenterX="0"
                        CenterY="0"
                        ScaleX="{Binding ElementName=MyWindow, Path=ScaleValue}"
                        ScaleY="{Binding ElementName=MyWindow, Path=ScaleValue}" />
        </Grid.LayoutTransform>
        
        <Grid.ColumnDefinitions>
            
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            
        </Grid.RowDefinitions>

        <Label Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" FontSize="46" FontFamily="Corbel Light">QuietTime</Label>

        <Grid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="18" />
                </Style>
            </Grid.Resources>

            <Label Grid.Row="0" Grid.Column="0">Current volume:</Label>
            <Label Grid.Row="1" Grid.Column="0" Content="{Binding CurrentVolume}"></Label>

            <Label Grid.Row="0" Grid.Column="1">New max volume:</Label>
            <Label Grid.Row="1" Grid.Column="1" Content="{Binding NewMaxVolume}"></Label>

            <Label Grid.Row="0" Grid.Column="2">Current max volume:</Label>
            <Label Grid.Row="1" Grid.Column="2" Content="{Binding MaxVolume}"></Label>

        </Grid>

        <Slider Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" 
                Maximum="100" MaxWidth="500" VerticalAlignment="Center"
                Value="{Binding NewMaxVolume}">
            <Slider.ToolTip>Use this to set what your new max volume will be</Slider.ToolTip>
            <Slider.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Lock/unlock max volume" Command="{Binding LockVolume}"/>
                </ContextMenu>
            </Slider.ContextMenu>
        </Slider>

        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="ScheduleWindowButton" Grid.Column="0" Margin="20" Content="Add schedule">
                <Button.ToolTip>Open the schedules window</Button.ToolTip>
            </Button>

            <Button Grid.Column="1" Margin="20" 
                Command="{Binding LockVolume}">
                <Button.ToolTip>Lock or unlock the max volume</Button.ToolTip>
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLocked}" Value="true">
                                <Setter Property="Content" Value="Unlock"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLocked}" Value="false">
                                <Setter Property="Content" Value="Lock"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="SettingsWindowButton" Grid.Column="2" Margin="20" Content="Open settings">
                <Button.ToolTip>Open the settings window</Button.ToolTip>
            </Button>
        </Grid>

        <Label Grid.Column="3" Grid.Row="4"  Content="{Binding VersionInfo, FallbackValue=QuietTime}" 
               HorizontalContentAlignment="Right" VerticalContentAlignment="Center"></Label>

        <!-- the system tray icon, not visible in the window itself-->
        <tb:TaskbarIcon x:Name="TrayIcon" DataContext="{Binding}" TrayMouseDoubleClick="TrayIcon_TrayMouseDoubleClick" PopupActivation="DoubleClick"
                        ToolTipText="QuietTime" IconSource="{StaticResource TrayIcon}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    
                    <TextBlock Text="{Binding CurrentVolume, StringFormat=Current volume: {0}}"/>
                    <TextBlock Text="{Binding MaxVolume, StringFormat=Current max: {0}}"/>
                    <Separator/>

                    <MenuItem Command="{Binding LockVolume}" Header="Lock/unlock"/>
                    <Separator/>
                    
                    <MenuItem Name="ShowWindowMenu" Header="Show main window"/>
                    <MenuItem Name="CloseAppMenu" Header="Exit QuietTime"/>
                    
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>

</Window>
