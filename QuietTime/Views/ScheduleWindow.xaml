<Window x:Class="QuietTime.Views.ScheduleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        xmlns:l="clr-namespace:QuietTime.Other" xmlns:viewmodels="clr-namespace:QuietTime.ViewModels" 
        d:DataContext="{d:DesignInstance Type=viewmodels:ScheduleWindowVM}"
        Title="Schedule Window" Name="MyScheduleWindow" MinWidth="1000" MinHeight="500">
    <Window.Background>
        <LinearGradientBrush
            StartPoint="0.771,0.907"
            EndPoint="0.229,0.093">
            <GradientStop
                Color="#FFFDDDFF"
                Offset="1" />
            <GradientStop
                Color="#bea3e0" />
        </LinearGradientBrush>
    </Window.Background>

    <Window.SizeToContent>WidthAndHeight</Window.SizeToContent>

    <Window.Resources>
        <l:DateTimeToTimeOnlyConverter x:Key="timeOnlyToDateTimeConverter" />
    </Window.Resources>

    <Grid x:Name="MainGrid" SizeChanged="MainGrid_SizeChanged">

        <Grid.LayoutTransform>
            <ScaleTransform x:Name="ApplicationScaleTransform"
                        CenterX="0"
                        CenterY="0"
                        ScaleX="{Binding ElementName=MyScheduleWindow, Path=ScaleValue}"
                        ScaleY="{Binding ElementName=MyScheduleWindow, Path=ScaleValue}" />
        </Grid.LayoutTransform>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" ></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>

        </Grid.ColumnDefinitions>

        <Label Grid.Column="0" Grid.Row="0" FontSize="36" FontFamily="Corbel Light">Schedules</Label>

        <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1" Margin="20 0 20 0">
            <ListView SelectedIndex="{Binding CurrentIndex}" MaxHeight="150" ItemsSource="{Binding Schedules}" ToolTip="See details about your schedules">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Right" />
                        <Setter Property="ToolTip" Value="See details about your schedules" />
                    </Style>
                    <Style TargetType="{x:Type ListView}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="ToolTip" Value="See details about your schedules" />
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="See details about your schedules">
                        <GridViewColumn DisplayMemberBinding="{Binding Start}" Header="Start" Width="100"/>
                        <GridViewColumn DisplayMemberBinding="{Binding End}" Header="End" Width="100"/>
                        <GridViewColumn DisplayMemberBinding="{Binding VolumeDuring}" Header="Volume during" Width="100"/>
                        <GridViewColumn DisplayMemberBinding="{Binding VolumeAfter}" Header="Volume after" Width="100"/>
                        <GridViewColumn DisplayMemberBinding="{Binding IsActive}" Header="Active?"  Width="100"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <StackPanel Grid.Column="1" Grid.Row="3" Margin="0 10 0 0" Orientation="Horizontal">
                
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Margin" Value="5 0 5 0" />
                        <Setter Property="Padding" Value="5" />
                    </Style>
                </StackPanel.Resources>
                
                <Button Command="{Binding FlipActivation}" ToolTip="If the selected schedule is active, will deactive it. Otherwise, will deactivate it.">Activate/deactivate selected</Button>
                <Button Command="{Binding ActivateAll}" ToolTip="Activates all schedules.">Activate all</Button>
                <Button Command="{Binding DeactivateAll}" ToolTip="Deactivates all schedules.">Deactivate all</Button>
                <Button Command="{Binding DeleteSelected}" ToolTip="Deactivates and permanently deletes the selected schedule.">Delete selected</Button>
                <Button Command="{Binding Serialize}" ToolTip="Saves your schedules to disk so they can be automatically loaded when you next start QuietTime.">Save schedules</Button>
            </StackPanel>
        </StackPanel>

        <Border Grid.Column="0" Grid.Row="1" BorderThickness="2" BorderBrush="Black" Padding="10" CornerRadius="20" Margin="5 0 0 5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="Margin" Value="0 5 0 5" />
                        <Setter Property="Grid.Column" Value="0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <Style TargetType="{x:Type xctk:DateTimeUpDown}">
                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Watermark" Value="00:00:00" />
                        <Setter Property="Format" Value="LongTime" />
                        <Setter Property="Padding" Value="5" />
                        <Setter Property="Margin" Value="0 5 0 5" />
                        <Setter Property="Grid.Column" Value="1" />
                    </Style>
                    <Style TargetType="{x:Type xctk:UIntegerUpDown}">
                        <Setter Property="Margin" Value="0 5 0 5" />
                        <Setter Property="Grid.Column" Value="1" />
                        <Setter Property="Watermark" Value="0" />
                        <Setter Property="Padding" Value="0 0 5 0" />
                    </Style>
                </Grid.Resources>

                <Label Grid.Row="0" Content="Start time">
                    <Label.ToolTip>When this schedule will start and lock your volume</Label.ToolTip>
                </Label>
                <xctk:DateTimeUpDown Grid.Row="0" Value="{Binding Schedule.Start, Converter={StaticResource timeOnlyToDateTimeConverter}}"/>

                <Label Grid.Row="1" Content="End time">
                    <Label.ToolTip>When this schedule will end and unlock your volume</Label.ToolTip>
                </Label>
                <xctk:DateTimeUpDown Grid.Row="1" Value="{Binding Schedule.End, Converter={StaticResource timeOnlyToDateTimeConverter}}"/>

                <Label Grid.Row="2" Content="Volume during">
                    <Label.ToolTip>What your volume will be capped to while the schedule is active</Label.ToolTip>
                </Label>
                <xctk:UIntegerUpDown Grid.Row="2" Value="{Binding Schedule.VolumeDuring}"/>

                <Label Grid.Row="3" Content="Volume after">
                    <Label.ToolTip>What your volume will be capped to when the schedule ends</Label.ToolTip>
                </Label>
                <xctk:UIntegerUpDown Grid.Row="3" Value="{Binding Schedule.VolumeAfter}"/>

                <Button HorizontalAlignment="Stretch" Margin="0 5 0 0" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" 
                        Command="{Binding AddSchedule}" Content="Add schedule" ToolTip="Creates a new schedule with the current values"/>
            </Grid>
        </Border>
    </Grid>
</Window>
