<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuietTime</name>
    </assembly>
    <members>
        <member name="T:QuietTime.App">
            <summary>
            App
            </summary>
        </member>
        <member name="M:QuietTime.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:QuietTime.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:QuietTime.Models.Schedule">
            <summary>
            Represents a a period during which the system audio will be capped to a specific volume.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.MinValues">
            <summary>
            A <see cref="T:QuietTime.Models.Schedule"/> set to all minimum values.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.Key">
            <summary>
            Uniquely identifies this schedule in the scheduling system.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.IsActive">
            <summary>
            Whether the schedule is currently firing.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.Start">
            <summary>
            When this schedule will start.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.End">
            <summary>
            When this schedule will end.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.Length">
            <summary>
            The total duration of this schedule.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.VolumeDuring">
            <summary>
            The maximum volume allowed while this schedule is active.
            </summary>
        </member>
        <member name="P:QuietTime.Models.Schedule.VolumeAfter">
            <summary>
            What the maximum volume will be set to when this schedule ends.
            </summary>
        </member>
        <member name="M:QuietTime.Models.Schedule.#ctor(System.TimeOnly,System.TimeOnly,System.Int32,System.Int32)">
            <summary>
            Creates a new schedule.
            </summary>
            <param name="start">When the schedule will start.</param>
            <param name="end">When the schedule will end.</param>
            <param name="volumeDuring">The maximum volume allowed while this schedule is active.</param>
            <param name="volumeAfter">What the maximum volume will be set to when this schedule ends.</param>
        </member>
        <member name="T:QuietTime.Other.DateTimeToTimeOnlyConverter">
            <summary>
            Converts between a <see cref="T:System.DateTime"/> and a <see cref="T:System.TimeOnly"/> for integrating a <see cref="T:QuietTime.Models.Schedule"/> with the date-picker tool on the Schedule page.
            </summary>
        </member>
        <member name="T:QuietTime.Other.EventIds">
            <summary>
            Provides strongly-typed access to <see cref="T:Microsoft.Extensions.Logging.EventId"/> instances for logging.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.AppStartup">
            <summary>
            Used when the application first starts.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.JobCreated">
            <summary>
            Used when a <see cref="T:QuietTime.Models.Schedule"/> is added to the scheduler.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.JobPerformed">
            <summary>
            Used when a <see cref="T:QuietTime.Models.Schedule"/> is performed by the scheduler.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.JobDeleted">
            <summary>
            Used when a <see cref="T:QuietTime.Models.Schedule"/> is deleted from the scheduler.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.MaxVolumeChanged">
            <summary>
            Used when the max volume limit is changed in the <see cref="T:QuietTime.Services.AudioService"/>.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.VolumeLimitHit">
            <summary>
            Used when the volume limit is hit in the <see cref="T:QuietTime.Services.AudioService"/>.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.AppClosing">
            <summary>
            Used when the app exits.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.AppClosingCancelled">
            <summary>
            Used when the app is closed by the user but returns to the system tray instead.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.DeserializationError">
            <summary>
            Used when deserializing a user's schedules fails.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.DeserializationSuccess">
            <summary>
            Used when deserializing a user's schedules succeeds.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.SerializationError">
            <summary>
            Used when serializing a user's schedules fails.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.SerializationSuccess">
            <summary>
            Used when serializing a user's schedules succeeds.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.AutomaticStartupAdded">
            <summary>
            Used when user makes QuietTime load on sign-in.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.AutomaticStartupRemoved">
            <summary>
            Used when user stops QuietTime loading on sign-in.
            </summary>
        </member>
        <member name="F:QuietTime.Other.EventIds.AutomaticStartupFailure">
            <summary>
            Used when stopping QuietTime from starting on sign-in fails..
            </summary>
        </member>
        <member name="T:QuietTime.Other.SchedulerService">
            <summary>
            Encapsulates queueing up a <see cref="T:QuietTime.Models.Schedule"/> for later execution. Wrapper to Quartz.NET.
            </summary>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.#ctor(Quartz.IScheduler,Microsoft.Extensions.Logging.ILogger{QuietTime.Other.SchedulerService},QuietTime.Services.AudioService,QuietTime.Services.NotificationService)">
            <summary>
            Creates a new <see cref="T:QuietTime.Other.SchedulerService"/>.
            </summary>
            <param name="scheduler">The core link to Quartz.NET.</param>
            <param name="logger">Logging service for this class.</param>
            <param name="audio">Used to actually clamp system volume when jobs fire.</param>
            <param name="notificationService">Notification service for this class.</param>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.StartAsync">
            <summary>
            Starts the scheduler.
            </summary>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.StopAsync">
            <summary>
            Place the scheduler on standby. Restart with the <see cref="M:QuietTime.Other.SchedulerService.StartAsync"/> method.
            </summary>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.CreateScheduleAsync(QuietTime.Models.Schedule)">
            <summary>
            Gives a user's schedule to the scheduler for later execution.
            </summary>
            <param name="userSchedule">The times and volumes to be executed later.</param>
            <returns>A <see cref="T:Quartz.JobKey"/> for uniquely identifying this schedule.</returns>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.DeleteScheduleAsync(Quartz.JobKey)">
            <summary>
            Deletes a schedule permanently.
            </summary>
            <param name="key">The unique key of the job to be deletes.</param>
            <returns>true if the schedule was found and deleted succesfully.</returns>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.PauseSchedule(Quartz.JobKey)">
            <summary>
            Pauses the firing of a specific schedule.
            </summary>
            <param name="key">The unique <see cref="T:Quartz.JobKey"/> of the schedule to be paused.</param>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.FlipScheduleActivation(Quartz.JobKey)">
            <summary>
            Activates paused schedules and pauses activated schedules.
            </summary>
            <param name="key">The unique <see cref="T:Quartz.JobKey"/> of the schedule to be paused.</param>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.PauseAll">
            <summary>
            Pauses all schedules.
            </summary>
        </member>
        <member name="M:QuietTime.Other.SchedulerService.ResumeAll">
            <summary>
            Activates all schedules.
            </summary>
        </member>
        <member name="T:QuietTime.Settings">
            <summary>
            Provides strongly-typed program settings.
            </summary>
        </member>
        <member name="P:QuietTime.Settings.InitialMaxVolume">
            <summary>
            Max volume when opening program.
            </summary>
        </member>
        <member name="P:QuietTime.Settings.SerializedDataFilename">
            <summary>
            Filename for user's serialized schedules.
            </summary>
        </member>
        <member name="P:QuietTime.Settings.NotificationsEnabled">
            <summary>
            Whether toast notifications should be enabled.
            </summary>
        </member>
        <member name="T:QuietTime.Services.AudioService">
            <summary>
            Encapsulates manipulation of system audio through the NAudio library.
            </summary>
        </member>
        <member name="E:QuietTime.Services.AudioService.LockStatusChanged">
            <summary>
            Fires when <see cref="P:QuietTime.Services.AudioService.IsLocked"/> changes. The boolean value represents whether system audio is currently locked.
            </summary>
        </member>
        <member name="E:QuietTime.Services.AudioService.VolumeChanged">
            <summary>
            Fires when <see cref="P:QuietTime.Services.AudioService.CurrentVolume"/> changes. The int represents the new volume as a percentage.
            </summary>
        </member>
        <member name="E:QuietTime.Services.AudioService.MaxVolumeChanged">
            <summary>
            Fires when <see cref="P:QuietTime.Services.AudioService.MaxVolume"/> changes. The int represents the new max volume as a percentage.
            </summary>
        </member>
        <member name="M:QuietTime.Services.AudioService.#ctor(Microsoft.Extensions.Options.IOptions{QuietTime.Settings},Microsoft.Extensions.Logging.ILogger{QuietTime.Services.AudioService},NAudio.CoreAudioApi.MMDeviceEnumerator,QuietTime.Services.NotificationService)">
            <summary>
            Creates a new <see cref="T:QuietTime.Services.AudioService"/>.
            </summary>
            <param name="config">Program configuration.</param>
            <param name="log">Logging framework for this class.</param>
            <param name="enumerator">NAudio link that provides access to system audio.</param>
        </member>
        <member name="P:QuietTime.Services.AudioService.CurrentVolume">
            <summary>
            The system's current volume, as a percentage.
            </summary>
        </member>
        <member name="M:QuietTime.Services.AudioService.SwitchLock(System.Int32)">
            <summary>
            Locks the maximum allowed volume.
            </summary>
        </member>
        <member name="T:QuietTime.Services.NotificationService">
            <summary>
            Encapsulates sending notifications to the user.
            </summary>
        </member>
        <member name="M:QuietTime.Services.NotificationService.#ctor(Hardcodet.Wpf.TaskbarNotification.TaskbarIcon,Microsoft.Extensions.Options.IOptions{QuietTime.Settings})">
            <summary>
            Creates a new <see cref="T:QuietTime.Services.NotificationService"/>.
            </summary>
            <param name="tray"></param>
        </member>
        <member name="T:QuietTime.Services.NotificationService.MessageLevel">
            <summary>
            Level of importance of notifications sent to user.
            </summary>
        </member>
        <member name="F:QuietTime.Services.NotificationService.MessageLevel.None">
            <summary>
            Message has unclassified importance.
            </summary>
        </member>
        <member name="F:QuietTime.Services.NotificationService.MessageLevel.Information">
            <summary>
            Message indicates no issues with the system.
            </summary>
        </member>
        <member name="F:QuietTime.Services.NotificationService.MessageLevel.Warning">
            <summary>
            Message indicates a failure that the system can work through.
            </summary>
        </member>
        <member name="F:QuietTime.Services.NotificationService.MessageLevel.Error">
            <summary>
            Message indicates a catastrophic failure the system can not recover from.
            </summary>
        </member>
        <member name="M:QuietTime.Services.NotificationService.SendNotification(System.String,System.String,QuietTime.Services.NotificationService.MessageLevel)">
            <summary>
            Sends a notification to the user.
            </summary>
            <param name="title">The title of the message.</param>
            <param name="message">The content of the message.</param>
            <param name="level">Indicates the relative importance of the message.</param>
        </member>
        <member name="T:QuietTime.Services.SerializerService">
            <summary>
            Encapsulates serializing a user's schedules.
            </summary>
        </member>
        <member name="M:QuietTime.Services.SerializerService.#ctor(Microsoft.Extensions.Options.IOptions{QuietTime.Settings},Microsoft.Extensions.Logging.ILogger{QuietTime.Services.SerializerService},QuietTime.Services.NotificationService)">
            <summary>
            Creates a new <see cref="T:QuietTime.Services.SerializerService"/>.
            </summary>
            <param name="config">Program configuration for this class.</param>
            <param name="logger">Logging framework for this class.</param>
            <param name="notifications">Notification service for this class.</param>
        </member>
        <member name="T:QuietTime.ViewModels.MainWindowVM">
            <summary>
            A viewmodel for the main window.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.CurrentVolume">
            <summary>
            The system's current volume.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.MaxVolume">
            <summary>
            The current volume limit.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.NewMaxVolume">
            <summary>
            What <see cref="P:QuietTime.ViewModels.MainWindowVM.MaxVolume"/> will be set to when volume levels are locked.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.VersionInfo">
            <summary>
            The version and build time of the program.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.IsLocked">
            <summary>
            Whether system audio is capped at <see cref="P:QuietTime.ViewModels.MainWindowVM.MaxVolume"/>.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.LockVolume">
            <summary>
            Encapsulates locking the system volume.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.MainWindowVM.Audio">
            <summary>
            Used for getting system information on current audio levels and requesting volume locks.
            </summary>
        </member>
        <member name="M:QuietTime.ViewModels.MainWindowVM.#ctor(Microsoft.Extensions.Logging.ILogger{QuietTime.ViewModels.MainWindowVM},QuietTime.Services.AudioService)">
            <summary>
            Creates a new <see cref="T:QuietTime.ViewModels.MainWindowVM"/>.
            </summary>
            <param name="logger">Logging framework for this class.</param>
            <param name="audio">Link to underlying audio infrastructure.</param>
        </member>
        <member name="T:QuietTime.ViewModels.ScheduleWindowVM">
            <summary>
            Viewmodel for <see cref="T:QuietTime.Views.ScheduleWindow"/>.
            </summary>
        </member>
        <member name="M:QuietTime.ViewModels.ScheduleWindowVM.#ctor(QuietTime.Other.SchedulerService,QuietTime.Services.SerializerService)">
            <summary>
            Creates a new <see cref="T:QuietTime.ViewModels.ScheduleWindowVM"/>.
            </summary>
            <param name="scheduler">Used to pass schedules created here into the scheduling back-end.</param>
            <param name="serializer">Handles serialization of user's schedules.</param>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.Schedules">
            <summary>
            The user's current schedules, both active and inactive.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.CurrentIndex">
            <summary>
            Currently-selected index of <see cref="P:QuietTime.ViewModels.ScheduleWindowVM.Schedules"/>.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.Schedule">
            <summary>
            Binding object for the UI.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.AddSchedule">
            <summary>
            Creates a schedule.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.FlipActivation">
            <summary>
            Pauses active schedules and activates paused schedules.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.ActivateAll">
            <summary>
            Activates all schedules.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.DeactivateAll">
            <summary>
            Deactivates all schedules.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.DeleteSelected">
            <summary>
            Deletes the schedule indicated by the <see cref="P:QuietTime.ViewModels.ScheduleWindowVM.CurrentIndex"/>.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.ScheduleWindowVM.Serialize">
            <summary>
            Serializes the current contents of <see cref="P:QuietTime.ViewModels.ScheduleWindowVM.Schedules"/> to JSON.
            </summary>
        </member>
        <member name="T:QuietTime.ViewModels.SettingsWindowVM">
            <summary>
            Viewmodel for a settings window.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.SettingsWindowVM.LaunchOnStartup">
            <summary>
            Whether QuietTime automatically launches when the user signs in.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.SettingsWindowVM.LaunchMinimized">
            <summary>
            Whether QuietTime will launch minimized in the system tray.
            </summary>
        </member>
        <member name="P:QuietTime.ViewModels.SettingsWindowVM.SwitchLaunchOptions">
            <summary>
            Either creates or delete the shortcut in the user's startup folder.
            </summary>
        </member>
        <member name="M:QuietTime.ViewModels.SettingsWindowVM.#ctor(QuietTime.Services.NotificationService,Microsoft.Extensions.Logging.ILogger{QuietTime.ViewModels.SettingsWindowVM})">
            <summary>
            Creates a new <see cref="T:QuietTime.ViewModels.SettingsWindowVM"/>.
            </summary>
            <param name="notifications">Notification service for this class.</param>
            <param name="logger">Logging service for this class.</param>
        </member>
        <member name="T:QuietTime.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:QuietTime.MainWindow.#ctor(QuietTime.ViewModels.MainWindowVM,QuietTime.ViewModels.ScheduleWindowVM,Microsoft.Extensions.Logging.ILogger{QuietTime.MainWindow},QuietTime.Services.NotificationService,QuietTime.ViewModels.SettingsWindowVM)">
            <summary>
            Creates a new <see cref="T:QuietTime.MainWindow"/>.
            </summary>
            <param name="viewModel">The viewmodel for this window.</param>
            <param name="schedulesViewModel">The viewmodel for the <see cref="T:QuietTime.Views.ScheduleWindow"/> that can be opened from this window.</param>
            <param name="logger">Logging framework for this class.</param>
            <param name="notifications">Notification service for this class.</param>
            <param name="settingsViewModel">Viewmodel for the <see cref="T:QuietTime.Views.SettingsWindow"/> that can be opened from this window.</param>
        </member>
        <member name="M:QuietTime.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuietTime.Views.ScheduleWindow">
            <summary>
            Interaction logic for ScheduleWindow.xaml
            </summary>
            <summary>
            ScheduleWindow
            </summary>
        </member>
        <member name="M:QuietTime.Views.ScheduleWindow.#ctor(QuietTime.ViewModels.ScheduleWindowVM)">
            <summary>
            Creates a new <see cref="T:QuietTime.Views.ScheduleWindow"/>.
            </summary>
            <param name="vm">The viewmodel for this window.</param>
        </member>
        <member name="M:QuietTime.Views.ScheduleWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:QuietTime.Views.SettingsWindow">
            <summary>
            Interaction logic for SettingsWindow.xaml
            </summary>
            <summary>
            SettingsWindow
            </summary>
        </member>
        <member name="M:QuietTime.Views.SettingsWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
